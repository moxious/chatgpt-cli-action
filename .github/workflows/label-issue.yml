on:
    workflow_call:
      inputs:
        url:
          required: true
          type: string
        type:
          required: true
          type: string
        prompt:
          required: true
          type: string
      secrets:
        OPENAI_API_KEY:
          required: true
        GH_TOKEN:
          required: true

jobs:
  label_issue:
    runs-on: ubuntu-latest
    name: Label Issue
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
            repository: moxious/chatgpt-cli-action
      - name: Determine automatic labeling
        uses: ./ # Uses an action in the root directory
        id: label_issue
        env:
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          url: ${{ inputs.url }}
          type: ${{ inputs.type }}
          prompt: |
            I will give you the content of a GitHub issue. I want you to assign the
            best possible label, or labels to the issue, choosing from the set below
            that I will provide.  I want you to output anywhere from 1 - 4 total 
            labels, separated by commas and no spaces, like this label1,label2,label3

            Please try choose at least one area label, and at least one type label.

            The legitimate labels you can choose from are ${{ inputs.prompt }}
      - name: Output 
        run: echo "${{ steps.label_issue.outputs.output }}"
      - name: Errors 
        run: echo '${{ steps.label_issue.outputs.errors }}'
      - name: Comment
        env:
            GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: gh issue comment ${{ inputs.url }} -b 'Triage bot recommends these labels ${{ steps.label_issue.outputs.output }} '
      - name: Add labels
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          for tag in $(echo "${{ steps.label_issue.outputs.output }}" | tr "," "\n") ; do 
            echo "'$tag'" ; 
            gh label create $tag; gh issue edit ${{ inputs.url }} --add-label "$tag" ;
          done
  
